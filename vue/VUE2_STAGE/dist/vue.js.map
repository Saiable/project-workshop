{"version":3,"file":"vue.js","sources":["../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["class Observer {\r\n    constructor(data) {\r\n        this.walk(data)\r\n    }\r\n\r\n    walk(data) { // 循环对象，对属性依此劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n}\r\n\r\n// 向外导出该方法，供单独使用\r\nexport function defineReactive(target, key, value) { // 闭包\r\n    Object.defineProperty(target, key, {\r\n        get() { // 取值的时候，会执行get\r\n            return value\r\n        },\r\n        set(newValue) { // 修改值的时候，会执行set\r\n            if(value == newValue) return\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    // console.log(data)\r\n    // 对data类型进行判断\r\n    if(typeof data !== 'object' || data == null) {\r\n        return // 只对对象进行劫持\r\n    }\r\n\r\n    // 如要考虑到一个对象已经被劫持的情况\r\n    // 如果一个对象已经被劫持过了，那么就不需要再被劫持\r\n    // 可以添加一个实例，用实例来判断是否被劫持过（应该是用实例身上的属性）\r\n    return new Observer(data)\r\n}","import {observe} from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options\r\n    if(opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n    // 对数据进行劫持,vue2中采用了defineProperty\r\n\r\n\r\n    // 定义一个方法obeserve观测数据，这是一个核心模块，我们单独新建observe文件夹进行处理\r\n    observe(data)\r\n\r\n    // 观测之前，把data放一份到vm._data身上\r\n    vm._data = data\r\n}","import {initState} from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this\r\n        vm.$options = options\r\n        initState(vm)\r\n    }\r\n}\r\n\r\n","import {initMixin} from \"./init\";\r\n\r\nfunction Vue(options) { // options就是用户的选项\r\n    // 拿到用户的options，做一下初始化\r\n    this._init(options)\r\n}\r\n\r\n// 给Vue增加init方法\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["Observer","data","walk","Object","keys","forEach","key","defineReactive","target","value","defineProperty","get","set","newValue","observe","initState","vm","opts","$options","initData","call","_data","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAMA;EACF,EAAA,SAAA,QAAA,CAAYC,IAAZ,EAAkB;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;;MACd,IAAKC,CAAAA,IAAL,CAAUD,IAAV,CAAA,CAAA;EACH,GAAA;;;;EAED,IAAA,KAAA,EAAA,SAAA,IAAA,CAAKA,IAAL,EAAW;EAAE;EACT;QACAE,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,OAAlB,CAA0B,UAAAC,GAAG,EAAA;UAAA,OAAIC,cAAc,CAACN,IAAD,EAAOK,GAAP,EAAYL,IAAI,CAACK,GAAD,CAAhB,CAAlB,CAAA;SAA7B,CAAA,CAAA;EACH,KAAA;;;;EAGL,CAAA,EAAA,CAAA;;;EACO,SAASC,cAAT,CAAwBC,MAAxB,EAAgCF,GAAhC,EAAqCG,KAArC,EAA4C;EAAE;EACjDN,EAAAA,MAAM,CAACO,cAAP,CAAsBF,MAAtB,EAA8BF,GAA9B,EAAmC;EAC/BK,IAAAA,GAD+B,EACzB,SAAA,GAAA,GAAA;EAAE;EACJ,MAAA,OAAOF,KAAP,CAAA;OAF2B;MAI/BG,GAJ+B,EAAA,SAAA,GAAA,CAI3BC,QAJ2B,EAIjB;EAAE;QACZ,IAAGJ,KAAK,IAAII,QAAZ,EAAsB,OAAA;EACtBJ,MAAAA,KAAK,GAAGI,QAAR,CAAA;EACH,KAAA;KAPL,CAAA,CAAA;EASH,CAAA;EACM,SAASC,OAAT,CAAiBb,IAAjB,EAAuB;EAC1B;EACA;IACA,IAAG,OAAA,CAAOA,IAAP,CAAgB,KAAA,QAAhB,IAA4BA,IAAI,IAAI,IAAvC,EAA6C;EACzC,IAAA,OADyC;EAE5C,GALyB;EAQ1B;EACA;;;EACA,EAAA,OAAO,IAAID,QAAJ,CAAaC,IAAb,CAAP,CAAA;EACH;;EChCM,SAASc,SAAT,CAAmBC,EAAnB,EAAuB;EAC1B,EAAA,IAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB,CAAA;;IACA,IAAGD,IAAI,CAAChB,IAAR,EAAc;MACVkB,QAAQ,CAACH,EAAD,CAAR,CAAA;EACH,GAAA;EACJ,CAAA;;EAED,SAASG,QAAT,CAAkBH,EAAlB,EAAsB;EAClB,EAAA,IAAIf,IAAI,GAAGe,EAAE,CAACE,QAAH,CAAYjB,IAAvB,CAAA;EACAA,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACmB,IAAL,CAAUJ,EAAV,CAA7B,GAA6Cf,IAApD,CAFkB;EAMlB;;EACAa,EAAAA,OAAO,CAACb,IAAD,CAAP,CAPkB;;IAUlBe,EAAE,CAACK,KAAH,GAAWpB,IAAX,CAAA;EACH;;EClBM,SAASqB,SAAT,CAAmBC,GAAnB,EAAwB;EAC3BA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAASC,OAAT,EAAkB;MACpC,IAAMV,EAAE,GAAG,IAAX,CAAA;MACAA,EAAE,CAACE,QAAH,GAAcQ,OAAd,CAAA;MACAX,SAAS,CAACC,EAAD,CAAT,CAAA;KAHJ,CAAA;EAKH;;ECND,SAASO,GAAT,CAAaG,OAAb,EAAsB;EAAE;EACpB;IACA,IAAKD,CAAAA,KAAL,CAAWC,OAAX,CAAA,CAAA;EACH;;;EAGDJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}