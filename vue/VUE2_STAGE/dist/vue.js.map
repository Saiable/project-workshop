{"version":3,"file":"vue.js","sources":["../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["class Observer {\r\n    constructor(data) {\r\n        if(Array.isArray(data)) {\r\n            // 这里我们可以重写数组的7个变异方法（可以修改数组本身）\r\n            data.__proto__ = {\r\n                push() {\r\n                    console.log('重写的push')\r\n                }\r\n            }\r\n            // this.observeArray(data) // 递归处理数组中的对象\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n\r\n    walk(data) { // 循环对象，对属性依此劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\n// 向外导出该方法，供单独使用\r\nexport function defineReactive(target, key, value) { // 闭包\r\n    observe(value) // observe内部对value进行判断了，是个对象，会再次创建Observer实例，再次调用walk方法，劫持每个属性\r\n    Object.defineProperty(target, key, {\r\n        get() { // 取值的时候，会执行get\r\n            console.log('key', key)\r\n            return value\r\n        },\r\n        set(newValue) { // 修改值的时候，会执行set\r\n            if(value == newValue) return\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // console.log(data)\r\n    // 对data类型进行判断\r\n    if(typeof data !== 'object' || data == null) {\r\n        return // 只对对象进行劫持\r\n    }\r\n\r\n    // 如要考虑到一个对象已经被劫持的情况\r\n    // 如果一个对象已经被劫持过了，那么就不需要再被劫持\r\n    // 可以添加一个实例，用实例来判断是否被劫持过（应该是用实例身上的属性）\r\n    return new Observer(data)\r\n}","import {observe} from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, { // vm.name\r\n        get() {\r\n            return vm[target][key] // vm.name实际上是去vm._data.name上去取值了\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue // 这性能的确不太好，每一个`key`都加了一层\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n    // 对数据进行劫持,vue2中采用了defineProperty\r\n\r\n    // 观测之前，把data放一份到vm._data身上\r\n    vm._data = data\r\n\r\n    // 定义一个方法obeserve观测数据，这是一个核心模块，我们单独新建observe文件夹进行处理\r\n    observe(data)\r\n\r\n    // 将vm._data用vm来代理，简化用户写法\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}","import {initState} from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this\r\n        vm.$options = options\r\n        initState(vm)\r\n    }\r\n}\r\n\r\n","import {initMixin} from \"./init\";\r\n\r\nfunction Vue(options) { // options就是用户的选项\r\n    // 拿到用户的options，做一下初始化\r\n    this._init(options)\r\n}\r\n\r\n// 给Vue增加init方法\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["Observer","data","Array","isArray","__proto__","push","console","log","walk","Object","keys","forEach","key","defineReactive","item","observe","target","value","defineProperty","get","set","newValue","initState","vm","opts","$options","initData","proxy","call","_data","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAMA;EACF,EAAA,SAAA,QAAA,CAAYC,IAAZ,EAAkB;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;;EACd,IAAA,IAAGC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAH,EAAwB;EACpB;QACAA,IAAI,CAACG,SAAL,GAAiB;EACbC,QAAAA,IADa,EACN,SAAA,IAAA,GAAA;YACHC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAA,CAAA;EACH,SAAA;EAHY,OAAjB,CAFoB;EAQvB,KARD,MAQO;QACH,IAAKC,CAAAA,IAAL,CAAUP,IAAV,CAAA,CAAA;EACH,KAAA;EACJ,GAAA;;;;EAED,IAAA,KAAA,EAAA,SAAA,IAAA,CAAKA,IAAL,EAAW;EAAE;EACT;QACAQ,MAAM,CAACC,IAAP,CAAYT,IAAZ,EAAkBU,OAAlB,CAA0B,UAAAC,GAAG,EAAA;UAAA,OAAIC,cAAc,CAACZ,IAAD,EAAOW,GAAP,EAAYX,IAAI,CAACW,GAAD,CAAhB,CAAlB,CAAA;SAA7B,CAAA,CAAA;EACH,KAAA;;;EACD,IAAA,KAAA,EAAA,SAAA,YAAA,CAAaX,IAAb,EAAmB;EACfA,MAAAA,IAAI,CAACU,OAAL,CAAa,UAAAG,IAAI,EAAA;UAAA,OAAIC,OAAO,CAACD,IAAD,CAAX,CAAA;SAAjB,CAAA,CAAA;EACH,KAAA;;;;EAGL,CAAA,EAAA,CAAA;;;EACO,SAASD,cAAT,CAAwBG,MAAxB,EAAgCJ,GAAhC,EAAqCK,KAArC,EAA4C;EAAE;EACjDF,EAAAA,OAAO,CAACE,KAAD,CAAP,CAD+C;;EAE/CR,EAAAA,MAAM,CAACS,cAAP,CAAsBF,MAAtB,EAA8BJ,GAA9B,EAAmC;EAC/BO,IAAAA,GAD+B,EACzB,SAAA,GAAA,GAAA;EAAE;EACJb,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBK,GAAnB,CAAA,CAAA;EACA,MAAA,OAAOK,KAAP,CAAA;OAH2B;MAK/BG,GAL+B,EAAA,SAAA,GAAA,CAK3BC,QAL2B,EAKjB;EAAE;QACZ,IAAGJ,KAAK,IAAII,QAAZ,EAAsB,OAAA;EACtBJ,MAAAA,KAAK,GAAGI,QAAR,CAAA;EACH,KAAA;KARL,CAAA,CAAA;EAUH,CAAA;EAEM,SAASN,OAAT,CAAiBd,IAAjB,EAAuB;EAC1B;EACA;IACA,IAAG,OAAA,CAAOA,IAAP,CAAgB,KAAA,QAAhB,IAA4BA,IAAI,IAAI,IAAvC,EAA6C;EACzC,IAAA,OADyC;EAE5C,GALyB;EAQ1B;EACA;;;EACA,EAAA,OAAO,IAAID,QAAJ,CAAaC,IAAb,CAAP,CAAA;EACH;;EChDM,SAASqB,SAAT,CAAmBC,EAAnB,EAAuB;EAC1B,EAAA,IAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB,CAAA;;IACA,IAAID,IAAI,CAACvB,IAAT,EAAe;MACXyB,QAAQ,CAACH,EAAD,CAAR,CAAA;EACH,GAAA;EACJ,CAAA;;EAED,SAASI,KAAT,CAAeJ,EAAf,EAAmBP,MAAnB,EAA2BJ,GAA3B,EAAgC;EAC5BH,EAAAA,MAAM,CAACS,cAAP,CAAsBK,EAAtB,EAA0BX,GAA1B,EAA+B;EAAE;EAC7BO,IAAAA,GAD2B,EACrB,SAAA,GAAA,GAAA;QACF,OAAOI,EAAE,CAACP,MAAD,CAAF,CAAWJ,GAAX,CAAP,CADE;OADqB;MAI3BQ,GAJ2B,EAAA,SAAA,GAAA,CAIvBC,QAJuB,EAIb;QACVE,EAAE,CAACP,MAAD,CAAF,CAAWJ,GAAX,CAAkBS,GAAAA,QAAlB,CADU;EAEb,KAAA;KANL,CAAA,CAAA;EAQH,CAAA;;EAED,SAASK,QAAT,CAAkBH,EAAlB,EAAsB;EAClB,EAAA,IAAItB,IAAI,GAAGsB,EAAE,CAACE,QAAH,CAAYxB,IAAvB,CAAA;EACAA,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAAC2B,IAAL,CAAUL,EAAV,CAA7B,GAA6CtB,IAApD,CAFkB;EAKlB;;EACAsB,EAAAA,EAAE,CAACM,KAAH,GAAW5B,IAAX,CANkB;;EASlBc,EAAAA,OAAO,CAACd,IAAD,CAAP,CATkB;;EAYlB,EAAA,KAAK,IAAIW,GAAT,IAAgBX,IAAhB,EAAsB;EAClB0B,IAAAA,KAAK,CAACJ,EAAD,EAAK,OAAL,EAAcX,GAAd,CAAL,CAAA;EACH,GAAA;EACJ;;ECjCM,SAASkB,SAAT,CAAmBC,GAAnB,EAAwB;EAC3BA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAASC,OAAT,EAAkB;MACpC,IAAMX,EAAE,GAAG,IAAX,CAAA;MACAA,EAAE,CAACE,QAAH,GAAcS,OAAd,CAAA;MACAZ,SAAS,CAACC,EAAD,CAAT,CAAA;KAHJ,CAAA;EAKH;;ECND,SAASQ,GAAT,CAAaG,OAAb,EAAsB;EAAE;EACpB;IACA,IAAKD,CAAAA,KAAL,CAAWC,OAAX,CAAA,CAAA;EACH;;;EAGDJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}