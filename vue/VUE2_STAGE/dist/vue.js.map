{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 我们希望重写数组中的部分方法\r\n\r\nlet oldArrayProto = Array.prototype\r\n\r\n// newArraryProto.__proto = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto) // 以oldArryarProto对象为原型对象，新建一个newArraryProto\r\n\r\n// 找到所有的变异方法\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n] // concact slice都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n    // arr.push(1,2,3)\r\n    newArrayProto[method] = function (...args) { // 这里重写了数组方法\r\n        const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法，一般称为函数的劫持（切片编程(切面编程)：自己写个功能，把以前的功能塞进去，外面可以做一些自己的事，aop）\r\n        // 我们需要对新增的数据，再次进行劫持\r\n        let inserted\r\n        let ob = this.__ob__\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift': // arr.unshift(1,2,3)\r\n                inserted = args\r\n                break\r\n            case 'splice': // arr.splice(0, 1, {a:1}, {a:1})\r\n                inserted = args.slice(2)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        console.log('新增的内容', inserted)\r\n        if(inserted) {\r\n            // 对新增的内容再次进行观测\r\n            ob.observeArray(inserted)\r\n        }\r\n        return result\r\n    }\r\n})","import { newArrayProto } from './array'\r\nclass Observer {\r\n    constructor(data) {\r\n        // data.__ob__ = this\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n        if(Array.isArray(data)) {\r\n            // 这里我们可以重写数组的7个变异方法（可以修改数组本身）\r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data) // 递归处理数组中的对象\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n\r\n    walk(data) { // 循环对象，对属性依此劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\n// 向外导出该方法，供单独使用\r\nexport function defineReactive(target, key, value) { // 闭包\r\n    observe(value) // observe内部对value进行判断了，是个对象，会再次创建Observer实例，再次调用walk方法，劫持每个属性\r\n    Object.defineProperty(target, key, {\r\n        get() { // 取值的时候，会执行get\r\n            console.log('key', key)\r\n            return value\r\n        },\r\n        set(newValue) { // 修改值的时候，会执行set\r\n            if(value == newValue) return\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // console.log(data)\r\n    // 对data类型进行判断\r\n    if(typeof data !== 'object' || data == null) {\r\n        return // 只对对象进行劫持\r\n    }\r\n\r\n    // 如要考虑到一个对象已经被劫持的情况\r\n    // 如果一个对象已经被劫持过了，那么就不需要再被劫持\r\n    // 可以添加一个实例，用实例来判断是否被劫持过（应该是用实例身上的属性）\r\n    if(data.__ob__ instanceof Observer) {\r\n        return data.__ob__ // 如果被代理过了，直接返回它的实例\r\n    }\r\n    return new Observer(data)\r\n}","import {observe} from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, { // vm.name\r\n        get() {\r\n            return vm[target][key] // vm.name实际上是去vm._data.name上去取值了\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue // 这性能的确不太好，每一个`key`都加了一层\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n    // 对数据进行劫持,vue2中采用了defineProperty\r\n\r\n    // 观测之前，把data放一份到vm._data身上\r\n    vm._data = data\r\n\r\n    // 定义一个方法obeserve观测数据，这是一个核心模块，我们单独新建observe文件夹进行处理\r\n    observe(data)\r\n\r\n    // 将vm._data用vm来代理，简化用户写法\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}","import {initState} from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this\r\n        vm.$options = options\r\n        initState(vm)\r\n\r\n        if(options.el) {\r\n            vm.$mount(options.el)\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.options\r\n        if(!ops.render) { // 先查找render函数\r\n            let template\r\n            if(!ops.template && el) { // 没有template配置项，但是有el配置项\r\n                template = el.outerHTML // 就用el的配置项，outHTML返回的是匹配到自身的dom元素\r\n            } else { // 如果有template,就用template配置项\r\n                if(el) {\r\n                    template = ops.template\r\n                }\r\n            }\r\n            console.log(template)\r\n        }\r\n    }\r\n}\r\n\r\n","import {initMixin} from \"./init\";\r\n\r\nfunction Vue(options) { // options就是用户的选项\r\n    // 拿到用户的options，做一下初始化\r\n    this._init(options)\r\n}\r\n\r\n// 给Vue增加init方法\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","console","log","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","template","outerHTML"],"mappings":"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"}